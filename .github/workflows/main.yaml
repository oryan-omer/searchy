name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  static_analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          pip install poetry
          poetry install
      - name: Run static analysis
        run: make run-static-analysis

      - name: Run Python Black
        run: make run-black-check

  security-checks:
    runs-on: ubuntu-latest
    needs: static_analysis
    steps:
      - name: Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args:
            -Dsonar.projectKey=oryan-omer_searchy
            -Dsonar.organization=oryan-omer
            -X

  tests:
    runs-on: ubuntu-latest
    needs: [ static_analysis, security-checks ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          pip install poetry
          poetry install
      - name: Run pytest
        run: make test


  build_and_push_docker:
    runs-on: ubuntu-latest
    needs: [ static_analysis, tests,security-checks ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: oryanos/searchy:latest


#  deploy_kubernetes:
#    runs-on: ubuntu-latest
#    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Set up Kubernetes CLI
#        uses: appleboy/kubectl-action@v1.3.4
#        with:
#          kubeconfig: ${{ secrets.KUBECONFIG }}
#      - name: Deploy to Kubernetes
#        run: |
#          kubectl set image deployment/searchy searchy=your-dockerhub-username/searchy:latest
